- id: healthcheck
  alias: Healthcheck Connection
  description: Send a ping to Healthcheck every minute
  mode: single
  trigger:
    platform: time_pattern
    minutes: /10
  action:
    - service: rest_command.healthcheck

- id: open_uv_index_update
  alias: Update OpenUV
  description: Update OpenUV every hour only when sun is above horizon
  mode: single
  trigger:
    platform: time_pattern
    hours: /1
  condition:
    # Check only when sun is above horizon and not more than once per 59 minutes
    - condition: state
      entity_id: sun.sun
      state: 'above_horizon'
  action:
    - service: openuv.update_uv_index_data
    - delay:
        minutes: 30

- id: magic_cube_actions
  alias: Magic Cube Actions
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/magic_cube/action
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ trigger.payload == 'flip90' }}"
          sequence:
            - service: scene.turn_on
              data:
                entity_id: scene.night_lights
                transition: 1
        - conditions:
            - condition: template
              value_template: "{{ trigger.payload == 'flip180' }}"
          sequence:
            - service: scene.turn_on
              data:
                entity_id: scene.evening_lights
                transition: 1
        - conditions:
            - condition: template
              value_template: "{{ trigger.payload == 'slide' }}"
          sequence:
            - service: light.toggle
              data:
                entity_id: light.living_room_main_light
                transition: 1
        - conditions:
            - condition: template
              value_template: "{{ trigger.payload == 'shake' }}"
          sequence:
            - service: scene.turn_on
              data:
                entity_id: scene.lights_out
                transition: 1
        - conditions:
            - condition: template
              value_template: "{{ trigger.payload == 'tap' }}"
          sequence:
            - service: input_boolean.toggle
              entity_id: input_boolean.do_not_disturb
            - service: script.announcement
              data:
                speak: false
                title: –ù–µ —Ç—É—Ä–±—É–≤–∞—Ç–∏ üí§
                messages:
                  - "–†–µ–∂–∏–º ¬´–ù–µ —Ç—É—Ä–±—É–≤–∞—Ç–∏¬ª {% if is_state('input_boolean.do_not_disturb', 'on') %} —É–≤—ñ–º–∫–Ω–µ–Ω–æ {% else %} –≤–∏–º–∫–Ω–µ–Ω–æ {% endif%}."
                  - "–†–µ–∂–∏–º —Ç–∏—à—ñ {% if is_state('input_boolean.do_not_disturb', 'on') %} —É–≤—ñ–º–∫–Ω–µ–Ω–æ {% else %} –≤–∏–º–∫–Ω–µ–Ω–æ {% endif%}."
                  - "{% if is_state('input_boolean.do_not_disturb', 'on') %} –£–≤—ñ–º–∫–Ω–µ–Ω–æ {% else %} –í–∏–º–∫–Ω–µ–Ω–æ {% endif%} —Ä–µ–∂–∏–º —Ç–∏—à—ñ."
