- id: everyone_is_arriving
  alias: Everyone is Arriving
  description: Turn on things when people are arriving
  trigger:
    platform: state
    entity_id: group.family
    from: 'not_home'
    to: 'home'
  action:
    # Wait for someone to come
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.front_door_sensor_contact
          to: 'on'
        - platform: state
          entity_id: binary_sensor.living_room_movement_sensor_occupancy
          to: 'on'
        - platform: state
          entity_id: binary_sensor.bedroom_movement_sensor_occupancy
          to: 'on'
      timeout: '01:00:00'
      continue_on_timeout: false
    # Turn on lights after sunset
    - choose:
        - conditions:
            - condition: sun
              after: sunset
            - condition: time
              before: 00:00
          sequence:
            - service: scene.turn_on
              data:
                entity_id: scene.evening_lights
                transition: 5
            - service: light.turn_on
              data:
                entity_id: light.living_room_main_light
                brightness: 255
        - conditions:
            - condition: sun
              before: sunrise
            - condition: time
              after: 00:00
          sequence:
            - service: scene.turn_on
              data:
                entity_id: scene.evening_lights
                transition: 5
    # Turn on fans
    - service: fan.turn_on
      entity_id: all
    # Greet people with a delay
    - delay:
        seconds: 5
    - service: script.greeting
    # Wait for a phrase to be said
    - delay:
        seconds: 30
    # Set device to correct state of DND
    - service: script.do_not_disturb_mode

- id: everyone_is_leaving
  alias: Everyone is Leaving
  description: Turn off things when people are leaving
  trigger:
    platform: state
    entity_id: group.family
    from: 'home'
    to: 'not_home'
    for: '00:10:00'
  action:
    - service: fan.turn_off
      entity_id: all
    - service: light.turn_off
      entity_id: all
    - service: climate.turn_off
      entity_id: all
    - service: media_player.turn_off
      entity_id: all
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.time_to_clean
              state: 'on'
            - condition: state
              entity_id: vacuum.roborock
              state: 'docked'
          sequence:
            - service: script.announcement
              data:
                speak: false
                title: '–ü–∏–ª–æ—Å–æ—Å üßπ'
                messages:
                  - '–ü–æ—Ä–∞ –ø–æ—á–∞—Ç–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–µ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è.'
                  - '–ß–∞—Å –ø—Ä–∏–±–∏—Ä–∞—Ç–∏ –≤–¥–æ–º–∞.'
                  - '–ë–∞–∂–∞—î—Ç–µ –ø—Ä–∏–±—Ä–∞—Ç–∏ –≤–¥–æ–º–∞?'
                  - '–ü–æ—á–∞—Ç–∏ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è?'
                  - "{{ state_attr('vacuum.roborock', 'friendly_name') }} –ø—Ä–æ–ø–æ–Ω—É—î –¥–æ–º–∞—à–Ω—î –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è."
                  - "{{ state_attr('vacuum.roborock', 'friendly_name') }} —Ö–æ—á–µ –ø—Ä–∏–±–∏—Ä–∞—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É."
                  - "{{ state_attr('vacuum.roborock', 'friendly_name') }} –¥–∞–≤–Ω–æ –Ω–µ –ø—Ä–∏–±–∏—Ä–∞–≤. –ü–æ—á–∞—Ç–∏?"
                notify_data:
                  push:
                    category: VACUUM_ASK_CLEANING
