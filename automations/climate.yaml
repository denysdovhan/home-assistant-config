- id: turn_on_balcony_heater
  alias: Turn on Balcony Heater
  trigger:
    - platform: state
      entity_id: binary_sensor.work_display_connected
      to: 'on'
    - platform: state
      entity_id: light.desk_lamp
      to: 'on'
    - platform: state
      entity_id: binary_sensor.balcony_comfort_temperature
      to: 'off'
  condition:
    - condition: state
      entity_id: binary_sensor.balcony_comfort_temperature
      state: 'off'
    - condition: state
      entity_id: climate.balcony_heater
      state: 'off'
    # Either display or desk_lamp should be on when the temperature is low
    - condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.work_display_connected
          state: 'on'
        - condition: state
          entity_id: light.desk_lamp
          state: 'on'
  action:
    - service: climate.turn_on
      entity_id: climate.balcony_heater

- id: turn_off_balcony_heater
  alias: Turn off Balcony Heater
  trigger:
    - platform: state
      entity_id: binary_sensor.work_display_connected
      to: 'off'
      for:
        minutes: 30
    - platform: state
      entity_id: binary_sensor.balcony_comfort_temperature
      to: 'on'
      for:
        minutes: 30
  condition:
    - condition: state
      entity_id: climate.balcony_heater
      state: 'heat'
    # Do not turn off if it is cold on balcony
    - condition: state
      entity_id: binary_sensor.balcony_comfort_temperature
      state: 'on'
    - condition: state
      entity_id: binary_sensor.work_display_connected
      state: 'off'
  action:
    - service: climate.turn_off
      entity_id: climate.balcony_heater
    # Turn off desk lamp as well
    - condition: state
      entity_id: light.desk_lamp
      state: 'on'
    - service: light.turn_off
      entity_id: light.desk_lamp

- id: work_on_balcony
  alias: Work on Balcony
  trigger:
    - platform: state
      entity_id: binary_sensor.denyss_iphone_focus
      to: 'off'
  condition:
    - condition: state
      entity_id: binary_sensor.balcony_comfort_temperature
      state: 'off'
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - condition: state
      entity_id: person.denys
      state: 'home'
    - condition: time
      after: '8:00'
      before: '15:00'
  action:
    - alias: Prepare a action variable
      variables:
        heat_action: "{{ 'HEAT_' ~ context.id }}"
        delay_minutes: '{{ range(1, 30) | random }}'
    - alias: Wait for some time after wake up
      delay:
        minutes: '{{ delay_minutes }}'
    - alias: Send an actionable notification
      service: script.announcement
      data:
        service: notify.denys
        title: '–†–æ–±–æ—á–µ –º—ñ—Å—Ü–µ üñ•'
        speak: false
        greetings:
          - "–ù–∞ –±–∞–ª–∫–æ–Ω—ñ {{ states('sensor.balcony_conditions_sensor_temperature') | round(1) }}¬∞C."
          - "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –±–∞–ª–∫–æ–Ω—ñ {{ states('sensor.balcony_conditions_sensor_temperature') | round(1) }}¬∞C."
          - "–ó–∞—Ä–∞–∑ –Ω–∞ –±–∞–ª–∫–æ–Ω—ñ {{ states('sensor.balcony_conditions_sensor_temperature') | round(1) }}¬∞C."
        messages:
          - '–•–æ—á–µ—Ç–µ —É–≤—ñ–º–∫–Ω—É—Ç–∏ –æ–±—ñ–≥—Ä—ñ–≤?'
          - '–ù–∞–≥—Ä—ñ—Ç–∏ –±–∞–ª–∫–æ–Ω –¥–ª—è —Ä–æ–±–æ—Ç–∏?'
          - '–£–≤—ñ–º–∫–Ω—É—Ç–∏ –æ–±—ñ–≥—Ä—ñ–≤–∞—á?'
          - '–ù–∞–≥—Ä—ñ—Ç–∏ –¥–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ—ó —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏?'
          - '–ü—ñ–¥—ñ–≥—Ä—ñ—Ç–∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ—ó —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏?'
        notify_data:
          actions:
            - action: '{{ heat_action }}'
              title: –ù–∞–≥—Ä—ñ—Ç–∏ –±–∞–ª–∫–æ–Ω
          url: /lovelace/balcony
    - alias: Wait for notification to be pressed
      wait_for_trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: '{{ heat_action }}'
      timeout: '12:00:00'
      continue_on_timeout: false
    - alias: Start heating the balcony
      service: climate.turn_on
      entity_id: climate.balcony_heater
    - alias: Wait to heat up
      wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.balcony_comfort_temperature
          to: 'on'
      timeout: '6:00:00'
      continue_on_timeout: false
    - alias: Notify about comfort temperature
      service: script.announcement
      data:
        service: notify.denys
        title: '–†–æ–±–æ—á–µ –º—ñ—Å—Ü–µ üñ•'
        speak: false
        greetings:
          - '–ú–æ–∂–Ω–∞ –π—Ç–∏ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏.'
          - '–ë–∞–ª–∫–æ–Ω –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏.'
          - '–†–æ–±–æ—á–µ –º—ñ—Å—Ü–µ –Ω–∞–≥—Ä—ñ—Ç–µ –¥–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ—ó —Ç–µ–º–ø–µ—Ä—Ç–∞—Ä—É—Ä–∏.'
          - '–†–æ–±–æ—á–µ –º—ñ—Å—Ü–µ –≥–æ—Ç–æ–≤–µ.'
        messages:
          - "–ù–∞ –±–∞–ª–∫–æ–Ω—ñ {{ states('sensor.balcony_conditions_sensor_temperature') | round(1) }}¬∞C."
          - "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {{ states('sensor.balcony_conditions_sensor_temperature') | round(1) }}¬∞C."
          - "–ó–∞—Ä–∞–∑ –Ω–∞ –±–∞–ª–∫–æ–Ω—ñ {{ states('sensor.balcony_conditions_sensor_temperature') | round(1) }}¬∞C."
        notify_data:
          url: /lovelace/balcony
