#
# Sensor
#
# https://www.home-assistant.io/integrations/sensor/
#

sensor:
  # MQTT Bridge
  - platform: mqtt
    name: Bridge state
    state_topic: 'zigbee2mqtt/bridge/state'
    icon: mdi:router-wireless

  # System Monitor
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: disk_use_percent
        arg: /media
      - type: processor_use
      - type: memory_use_percent

  - platform: miflora
    name: dracaena
    mac: 'C4:7C:8D:6D:49:73'

  # Temperature
  - platform: min_max
    name: Home Temperature
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_temperature
      - sensor.air_humidifier_temperature
      - sensor.air_purifier_temperature
  - platform: min_max
    name: Living Room Temperature
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_temperature
      - sensor.air_purifier_temperature
  - platform: min_max
    name: Bedroom Temperature
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_temperature
      - sensor.air_humidifier_temperature

  # Humidity
  - platform: min_max
    name: Home Humidity
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_humidity
      - sensor.air_humidifier_humidity
      - sensor.air_purifier_humidity
  - platform: min_max
    name: Living Room Humidity
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_humidity
      - sensor.air_purifier_humidity
  - platform: min_max
    name: Bedroom Humidity
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_humidity
      - sensor.air_humidifier_humidity

  # Lun Misto
  - platform: rest
    name: Misto Lun
    resource: https://api.meteostation.online/chrome/addon/informer/
    value_template: 'OK'
    scan_interval: 300 # every 5 minutes
    json_attributes:
      - lunmisto_air
      - tomtom_jams
      - tomtom_temp

  # Lun Misto AQI
  - platform: rest
    name: nyvky_aqi
    resource: https://misto.lun.ua/api/air/v1/public/data/
    value_template: >-
      {% set station = '70' %}
      {# #}
      {% macro aqi(aqihigh, aqilow, conchigh, conclow, conc) -%}
        {{ (aqilow + (conc - conclow) * (aqihigh - aqilow) / (conchigh - conclow)) | round }}
      {%- endmacro %}
      {# #}
      {% for sensor in value_json %}
        {% if sensor.station.name == station %}
          {% set conc = sensor.particles[2].pm25 %}
          {% if conc >= 0 and conc < 12 %}
              {{ aqi(50, 0, 12, 0, conc) }}
          {% elif conc >= 12 and conc < 35.5 %}
              {{ aqi(100, 51, 35.5, 12, conc) }}
          {% elif conc >= 35.5 and conc < 55.5 %}
              {{ aqi(150, 101, 55.5, 35.5, conc) }}
          {% elif conc >= 55.5 and conc < 150 %}
              {{ aqi(200, 151, 150.5, 55.5, conc) }}
          {% elif conc >= 150 and conc < 250.5 %}
              {{ aqi(300, 201, 250.5, 150.5, conc) }}
          {% elif conc >= 250.5 and conc < 350.5 %}
              {{ aqi(400, 301, 350.5, 250.5, conc) }}
          {% elif conc >= 350.5 and conc < 500.5 %}
              {{ aqi(500, 401, 500.5, 350.5, conc) }}
          {% else %}
              unknown
          {% endif %}
        {% endif %}
      {% endfor %}
    scan_interval: 300 # every 5 minutes
    json_attributes_path: "$.[?(@.station.name=='70')].particles[2]"
    json_attributes:
      - pm25
      - pm10
      - pm100

  # Lun Misto Sensors
  - platform: template
    sensors:
      nyvky_pm2_5:
        value_template: >-
          {{ state_attr('sensor.nyvky_aqi', 'pm25') | round() }}
      kyiv_aqi:
        value_template: >-
          {{ states.sensor.misto_lun.attributes.lunmisto_air.aqi_scale_value | round() }}
      kyiv_traffic_jams:
        value_template: >-
          {{ states.sensor.misto_lun.attributes.tomtom_jams.jams | round() }}

  # Vacuum
  - platform: template
    sensors:
      roborock_main_brush_left_hours:
        value_template: >-
          {{ (states('sensor.roborock_main_brush_left') | float(0) / 3600) | round(1) }}

      roborock_side_brush_left_hours:
        value_template: >-
          {{ (states('sensor.roborock_side_brush_left') | float(0) / 3600) | round(1) }}

      roborock_filter_left_hours:
        value_template: >-
          {{ (states('sensor.roborock_filter_left') | float(0) / 3600) | round(1) }}

      roborock_sensor_dirty_left_hours:
        value_template: >-
          {{ (states('sensor.roborock_sensor_dirty_left') | float(0) / 3600) | round(1) }}

  # Kyiv Smart Card
  #
  # FIXME: Token gets invalid every 24 hours. Needs renewal.
  #
  # - platform: rest
  #   name: kyivsmartcard_denys
  #   resource: https://my.kyivcity.gov.ua/api/me/travel-cards
  #   headers:
  #     User-Agent: Home Assistant
  #     Content-Type: application/json
  #     Connection: keep-alive
  #     Authorization: !secret kyivsmartcard_denys_token
  #   value_template: >-
  #     {{ value_json[0].assets.purchases[0].residualUnits }}
  #   json_attributes_path: "$.[0]"
  #   json_attributes:
  #     - code
  #     - name
  #     - createdAt

  # Availability Monitor
  - platform: template
    sensors:
      unavailable_devices:
        friendly_name: Unavailable Devices
        value_template: >-
          {% set domains = [states.light, states.media_player, states.fan] %}
          {% set states = ['unavailable', 'unknown', 'none'] %}
          {{ expand(domains) | selectattr('state', 'in', states) | list | length }}
        attribute_templates:
          entities: >-
            {% set domains = [states.light, states.media_player, states.fan] %}
            {% set states = ['unavailable', 'unknown', 'none'] %}
            {{ expand(domains) | selectattr('state', 'in', states) | map(attribute='entity_id') | list }}
          entities_names: >-
            {% set domains = [states.light, states.media_player, states.fan] %}
            {% set states = ['unavailable', 'unknown', 'none'] %}
            {{ expand(domains) | selectattr('state', 'in', states) | map(attribute='name') | list }}

  # Time for new home
  - platform: template
    sensors:
      fayna_days_left:
        value_template: >-
          {{ (as_local(as_datetime("2023-04-01")) - now()).days }}
      fayna_days_past:
        value_template: >-
          {{ (now() - as_local(as_datetime("2021-07-22"))).days }}
      fayna_progress:
        value_template: >-
          {% set day = 60 * 60 * 24 %}
          {% set days_left = (as_timestamp("2023-04-01 00:00:00") - as_timestamp(now())) / day %}
          {% set days_past = (as_timestamp(now()) - as_timestamp("2021-07-22 13:00")) / day %}
          {% set days_total = days_left + days_past %}
          {{ (days_past / days_total * 100) | round(2) }}

  # Estimated Power Usage
  - platform: powercalc
    create_group: Living Room
    entities:
      - entity_id: light.living_room_table_lights
        multiply_factor: 2
        multiply_factor_standby: true
        linear:
          min_power: 0.5
          max_power: 8.5
        standby_power: 0.2
      - entity_id: light.living_room_main_light
        manufacturer: Aqara
        model: ZNLDP12LM
        multiply_factor: 4
        multiply_factor_standby: true
      - entity_id: light.living_room_tv_lights
        fixed:
          power: "{{ states('sensor.tv_lights_real_time_energy') }}"
      - entity_id: climate.living_room_ac
        fixed:
          states_power:
            heat_cool: 1590
            heat: 1540
            cool: 1640
            dry: 1000
            fan_only: 1000
        standby_power: 1
      - entity_id: media_player.living_room_speaker
        fixed:
          states_power:
            playing: 3
            paused: 2
            idle: 2
        standby_power: 1.5
      - entity_id: media_player.samsung_tv
        fixed:
          power: >-
            {% set is_tv_on = is_state('media_player.samsung_tv', 'on') %}
            {% set is_apple_tv_playing = is_state('media_player.apple_tv', 'playing') %}
            {% set is_apple_tv_paused = is_state('media_player.apple_tv', 'paused') %}
            {% set is_apple_tv_idle = is_state('media_player.apple_tv', 'idle') %}

            {% set is_ps4_playing = is_state('media_player.playstation_4', 'playing') %}
            {% set is_ps4_paused = is_state('media_player.playstation_4', 'paused') %}

            {% if is_tv_on and (is_apple_tv_playing or is_ps4_playing) -%}
              170
            {%- elif is_tv_on and (is_apple_tv_paused or is_ps4_paused) %}
              111
            {%- elif is_tv_on and is_apple_tv_idle %}
              53
            {%- endif %}
        standby_power: 0.5
      - entity_id: media_player.playstation_4
        fixed:
          states_power:
            playing: 158.2
            paused: 56.9
            idle: 6.4
      - entity_id: media_player.apple_tv
        fixed:
          states_power:
            playing: 2.5
            paused: 2.0
            idle: 1.5
        standby_power: 0.5
      - entity_id: fan.air_purifier
        linear:
          min_power: 2
          max_power: 38
        standby_power: 0.5

  - platform: powercalc
    create_group: Bedroom
    entities:
      - entity_id: light.bedroom_floor_lamp
        linear:
          min_power: 2
          max_power: 9.1
        standby_power: 1
      - entity_id: light.bedroom_ceiling_light
      - entity_id: light.bedroom_bed_lights
        fixed:
          power: "{{ states('sensor.bedroom_bed_lights_real_time_energy') }}"
      - entity_id: climate.bedroom_ac
        fixed:
          states_power:
            heat_cool: 1590
            heat: 1540
            cool: 1640
            dry: 1000
            fan_only: 1000
        standby_power: 1
      - entity_id: media_player.bedroom_speaker
        fixed:
          states_power:
            playing: 3
            paused: 2
            idle: 2
        standby_power: 1.5
      - entity_id: vacuum.roborock
        fixed:
          states_power:
            cleaning: 28 # aprox. should charge correspondingly to cleaning time
            idle: 3
            docked: 3
            offline: 0
        standby_power: 3

  - platform: powercalc
    create_group: Balcony
    entities:
      - entity_id: light.desk_lamp
        linear:
          min_power: 2
          max_power: 14
        standby_power: 1
      - entity_id: switch.balcony_heater
        fixed:
          power: "{{ states('sensor.balcony_heater_real_time_energy') }}"
      - entity_id: binary_sensor.work_display_connected
        fixed:
          power: 45 # LG 4K display is on only when connected to laptop

  - platform: powercalc
    name: Fridge Energy
    daily_fixed_energy:
      value: 0.831 # 299 kWh/year (0.831 kWh/day)
