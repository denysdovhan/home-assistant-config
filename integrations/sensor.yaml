#
# Sensor
#
# https://www.home-assistant.io/integrations/sensor/
#

sensor:
  # MQTT Bridge
  - platform: mqtt
    name: Bridge state
    state_topic: 'zigbee2mqtt/bridge/state'
    icon: mdi:router-wireless

  # System Monitor
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: disk_use_percent
        arg: /media
      - type: processor_use
      - type: memory_use_percent

  - platform: miflora
    name: dracaena
    mac: 'C4:7C:8D:6D:49:73'

  # Temperature
  - platform: min_max
    name: Home Temperature
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_temperature
      - sensor.humidifier_temperature
      - sensor.air_purifier_temperature
  - platform: min_max
    name: Living Room Temperature
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_temperature
      - sensor.air_purifier_temperature
  - platform: min_max
    name: Bedroom Temperature
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_temperature
      - sensor.humidifier_temperature

  # Humidity
  - platform: min_max
    name: Home Humidity
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_humidity
      - sensor.humidifier_humidity
      - sensor.air_purifier_humidity
  - platform: min_max
    name: Living Room Humidity
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_humidity
      - sensor.air_purifier_humidity
  - platform: min_max
    name: Bedroom Humidity
    type: mean
    entity_ids:
      - sensor.living_room_conditions_sensor_humidity
      - sensor.humidifier_humidity

  # Humidifier
  - platform: template
    sensors:
      humidifier_humidity:
        value_template: >-
          {{ state_attr('fan.humidifier', 'humidity') }}
      humidifier_temperature:
        value_template: >-
          {{ state_attr('fan.humidifier', 'temperature') | round(2) }}

  # Lun Misto AQI
  - platform: rest
    name: sviatoshyn_aqi
    resource: https://misto.lun.ua/api/air/v1/public/data/
    value_template: >-
      {% set station = '125' %}
      {# #}
      {% macro aqi(aqihigh, aqilow, conchigh, conclow, conc) -%}
        {{ (aqilow + (conc - conclow) * (aqihigh - aqilow) / (conchigh - conclow)) | round }}
      {%- endmacro %}
      {# #}
      {% for sensor in value_json %}
        {% if sensor.station.name == station %}
          {% set conc = sensor.particles[2].pm25 %}
          {% if conc >= 0 and conc < 12 %}
              {{ aqi(50, 0, 12, 0, conc) }}
          {% elif conc >= 12 and conc < 35.5 %}
              {{ aqi(100, 51, 35.5, 12, conc) }}
          {% elif conc >= 35.5 and conc < 55.5 %}
              {{ aqi(150, 101, 55.5, 35.5, conc) }}
          {% elif conc >= 55.5 and conc < 150 %}
              {{ aqi(200, 151, 150.5, 55.5, conc) }}
          {% elif conc >= 150 and conc < 250.5 %}
              {{ aqi(300, 201, 250.5, 150.5, conc) }}
          {% elif conc >= 250.5 and conc < 350.5 %}
              {{ aqi(400, 301, 350.5, 250.5, conc) }}
          {% elif conc >= 350.5 and conc < 500.5 %}
              {{ aqi(500, 401, 500.5, 350.5, conc) }}
          {% else %}
              unknown
          {% endif %}
        {% endif %}
      {% endfor %}
    scan_interval: 120 # every 2 minutes
    json_attributes_path: "$.[?(@.station.name=='125')].particles[2]"
    json_attributes:
      - pm25
      - pm10
      - pm100

  # Sviatoshyn PM2.5
  - platform: template
    sensors:
      sviatoshyn_pm2_5:
        value_template: >-
          {{ state_attr('sensor.sviatoshyn_aqi', 'pm25') | round() }}

  # Kyiv Smart Card
  #
  # FIXME: Token gets invalid every 24 hours. Needs renewal.
  #
  # - platform: rest
  #   name: kyivsmartcard_denys
  #   resource: https://my.kyivcity.gov.ua/api/me/travel-cards
  #   headers:
  #     User-Agent: Home Assistant
  #     Content-Type: application/json
  #     Connection: keep-alive
  #     Authorization: !secret kyivsmartcard_denys_token
  #   value_template: >-
  #     {{ value_json[0].assets.purchases[0].residualUnits }}
  #   json_attributes_path: "$.[0]"
  #   json_attributes:
  #     - code
  #     - name
  #     - createdAt

  # Availability Monitor
  - platform: template
    sensors:
      unavailable_devices:
        friendly_name: Unavailable Devices
        value_template: >-
          {% set domains = [states.light, states.media_player, states.fan] %}
          {% set states = ['unavailable', 'unknown', 'none'] %}
          {{ expand(domains) | selectattr('state', 'in', states) | list | length }}
        attribute_templates:
          entities: >-
            {% set domains = [states.light, states.media_player, states.fan] %}
            {% set states = ['unavailable', 'unknown', 'none'] %}
            {{ expand(domains) | selectattr('state', 'in', states) | map(attribute='entity_id') | list }}
          entities_names: >-
            {% set domains = [states.light, states.media_player, states.fan] %}
            {% set states = ['unavailable', 'unknown', 'none'] %}
            {{ expand(domains) | selectattr('state', 'in', states) | map(attribute='name') | list }}

  # Time for new home
  - platform: template
    sensors:
      fayna_days_left:
        value_template: >-
          {{ (as_local(as_datetime("2023-04-01")) - now()).days }}
      fayna_days_past:
        value_template: >-
          {{ (now() - as_local(as_datetime("2021-07-22"))).days }}
      fayna_progress:
        value_template: >-
          {% set day = 60 * 60 * 24 %}
          {% set days_left = (as_timestamp("2023-04-01 00:00:00") - as_timestamp(now())) / day %}
          {% set days_past = (as_timestamp(now()) - as_timestamp("2021-07-22 13:00")) / day %}
          {% set days_total = days_left + days_past %}
          {{ (days_past / days_total * 100) | round(2) }}
