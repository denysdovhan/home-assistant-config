- id: '1723064000855'
  alias: 'System: Wake up Wall Tablet'
  description: When someone walks the corridor, wake up the wall mounted tablet
  trigger:
  - type: occupied
    platform: device
    device_id: dfcd386fd2e5691c4b0ffa999431e34a
    entity_id: 9be113192d401c74720384e7df35caa0
    domain: binary_sensor
  condition: []
  action:
  - alias: Wake up Wall Tablet
    action: notify.mobile_app_wall_tablet
    data:
      title: "Прокинься \U0001F971"
      message: Сповіщення, щоб планшет прокинувся.
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  mode: single
- id: '1723291053432'
  alias: 'System: Charging Wall Tablet'
  description: Handles charging for Wall Tablet, keeping battery level between 20-80%
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.wall_tablet_battery_level
    above: 80
    id: charged
  - platform: numeric_state
    entity_id:
    - sensor.wall_tablet_battery_level
    below: 20
    id: discharged
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - discharged
    then:
    - action: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.tablet_wall_socket_usb
    else:
    - action: switch.turn_off
      target:
        entity_id:
        - switch.tablet_wall_socket_usb
      data: {}
    alias: Toggle USB charging for wall tablet
  mode: single
- id: '1723373730592'
  alias: 'Alert: Air Siren in Kyiv'
  description: Air Alert announcement when we are in Kyiv. Sends critical notifications
    and announces on speakers.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.alerts_kyiv_air
    - binary_sensor.alerts_kyiv_artillery
    - binary_sensor.alerts_kyiv_chemical
    - binary_sensor.alerts_kyiv_nuclear
    - binary_sensor.alerts_kyiv_urban_fights
    to: 'on'
    from: 'off'
    variables:
      title: Повітряна тривога ⚠️
      messages:
      - Увага! Повітряна тривога у Києві!
      - У Києві повітряна тривога!
      - Повітряна тривога у Києві!
      - У Києві оголошено повітряну тривогу!
    alias: Початок тривоги у Києві
  - platform: state
    entity_id:
    - binary_sensor.alerts_kyiv_air
    - binary_sensor.alerts_kyiv_artillery
    - binary_sensor.alerts_kyiv_chemical
    - binary_sensor.alerts_kyiv_nuclear
    - binary_sensor.alerts_kyiv_urban_fights
    to: 'off'
    from: 'on'
    variables:
      title: "Відбій тривоги \U0001F44C"
      messages:
      - Відбій повітряної тривоги!
      - Відбій тривоги!
      - Кінець повітряної тривоги!
      - Кінець тривоги!
    alias: Відбій тривоги у Києві
  condition:
  - type: is_present
    condition: device
    device_id: 858b98accd89b76a9e8ecec9bd21c22f
    entity_id: 77cf94b4b1b0da61a47f0d780871b9e7
    domain: binary_sensor
  action:
  - action: media_player.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: media_player.living_room_homepod
  - data:
      title: '{{ title }}'
      messages: '{{ messages }}'
      force_to_speak: true
      notify_data:
        group: air-alerts
        push:
          sound:
            name: default
            critical: 1
            volume: 0.75
    alias: Оголосити початок або відбій тривоги
    action: script.announcement
  mode: single
- id: '1723375129657'
  alias: 'Alert: Danger in Kyiv'
  description: Danger of missile/drone strike in Kyiv RIGHT NOW. Critical alert to
    hide immediately.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.danger_in_war_monitor
    - binary_sensor.danger_in_operinform
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.alerts_kyiv_air
    state: 'on'
  action:
  - alias: Send a critical notification
    data:
      speak: false
      notify: true
      title: "Пряма загроза \U0001F4A5"
      messages:
      - '{{ trigger.to_state.attributes.latest_message }}'
      notify_data:
        group: air-alerts
        push:
          sound:
            name: default
            critical: 1
            volume: 1
    action: script.announcement
  - variables:
      messages:
      - Увага! Пряма загроза для Києва!
      - Увага! Пряма небезпека для Києва!
      - Увага! Загроза удару по Києву!
      - Увага! Негайно перейдіть до сховку!
      - Увага! Пряма загроза! Негайно сховайтесь!
      - Увага! Загроза для Києва! Негайно сховайтесь!
      - Увага! Атака на Київ! Негайно сховайтесь!
  - alias: Day or Night
    if:
    - condition: time
      after: 02:00:00
      before: '10:00:00'
    then:
    - action: media_player.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: media_player.bedroom_homepod
    - metadata: {}
      data:
        volume_level: 0.7
      target:
        entity_id:
        - media_player.bedroom_homepod
      action: media_player.volume_set
    - alias: Speak in Bedroom
      data:
        speak: true
        speaker: media_player.bedroom_homepod
        notify: false
        force_to_speak: true
        messages: '{{ messages }}'
      action: script.announcement
    - action: media_player.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: media_player.bedroom_homepod
    else:
    - action: media_player.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: media_player.living_room_homepod
    - metadata: {}
      data:
        volume_level: 0.6
      target:
        entity_id:
        - media_player.living_room_homepod
      action: media_player.volume_set
    - alias: Speak in Living Room
      data:
        speak: true
        speaker: media_player.living_room_homepod
        notify: false
        force_to_speak: true
        messages: '{{ messages }}'
      action: script.announcement
    enabled: true
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1723375913043'
  alias: 'Alert: Imminent Attack by Strategic Bombers'
  description: Send a notification when Tu-95 strategic bombers take off from Russian
    airfields. This means attack by cruise missiles is imminent. Prepare a hideout.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.imminent_attack_in_war_monitor
    - binary_sensor.imminent_attack_in_operinform
    from: 'off'
    to: 'on'
  condition: []
  action:
  - data:
      speak: false
      notify: true
      title: "Зліт бомбардувальників \U0001F6EB"
      messages:
      - '{{ trigger.to_state.attributes.latest_message }}'
    alias: Send a notification
    action: script.announcement
  mode: single
- id: '1723376382600'
  alias: 'Alert: Bad Air Quality'
  description: Notify when the air quality is bad
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.lun_misto_air_301_air_quality_index
    above: 50
    for:
      minutes: 10
  condition:
  - type: is_present
    condition: device
    device_id: 858b98accd89b76a9e8ecec9bd21c22f
    entity_id: 77cf94b4b1b0da61a47f0d780871b9e7
    domain: binary_sensor
  action:
  - data:
      title: "Шкідливе повітря \U0001F974"
      messages:
      - 'Індекс якості повітря завищений: {{ trigger.to_state.state | int(0) }} AQI'
      - 'Шкідливе повітря надворі: {{ trigger.to_state.state | int(0) }} AQI'
      - 'Індекс якості повітря: {{ trigger.to_state.state | int(0) }} AQI'
      notify_data:
        url: /lovelace/city
    alias: Announce bad air quality
    action: script.announcement
  - alias: Wait for 3 hours before the next announcement
    delay:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1723807610308'
  alias: 'Alert: Denys left the Office'
  description: Notify when Denys is leaving the office
  trigger:
  - platform: state
    entity_id: person.denys
    from: Wix
  condition:
  - condition: state
    entity_id: person.maria
    state: home
  - condition: time
    after: '16:00:00'
    before: '21:00:00'
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - action: script.announcement
    metadata: {}
    data:
      speak: false
      notify: true
      messages:
      - Денис вийшов з роботи.
      - Денис виїхав з роботи.
      - Денис пішов з роботи.
      title: "Денис \U0001F3C3"
  mode: single
- id: '1723809472546'
  alias: 'Alert: Electricity Outage'
  description: Notify everyone when there is no electricity at home.
  trigger:
  - platform: state
    entity_id: binary_sensor.electricity
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.electricity
    from: 'on'
    to: 'off'
  condition: []
  action:
  - variables:
      next_connectivity: '{{ states(''sensor.yasno_grupa_4_next_connectivity'') |
        as_timestamp | timestamp_custom(''%H:%M'') }}'
      next_outage: '{{ states(''sensor.yasno_grupa_4_next_outage'') | as_timestamp
        | timestamp_custom(''%H:%M'') }}'
      next_possible_outage: '{{ states(''sensor.yasno_grupa_4_next_possible_outage'')
        | as_timestamp | timestamp_custom(''%H:%M'') }}'
  - if:
    - condition: state
      entity_id: binary_sensor.electricity
      state: 'off'
    then:
    - alias: Notify electricity is off
      action: script.announcement
      metadata: {}
      data:
        speak: true
        title: Електрика ⚡️
        notify_data:
          url: /localave/reserve-power
          group: electricity
        openings:
        - Відключення електроенергії.
        - Вдома зникло світло.
        - Вдома немає електрики.
        - Відключення електроенергії вдома.
        - Вдома вимкнули світло.
        - Вдома вимкнули електрику.
        messages:
        - Сіра зона о {{ next_possible_outage }}. Увімкрення о {{ next_connectivity
          }}.
        - Можливе увімкнення о {{ next_possible_outage }}. Гарантовано о {{ next_connectivity
          }}.
    else:
    - alias: Notify electricity if on
      metadata: {}
      data:
        service: notify.all
        speak: true
        notify: true
        title: Електрика ⚡️
        notify_data:
          url: /localave/reserve-power
          group: electricity
        openings:
        - Вдома зʼявилось світло.
        - Вдома зʼявилась електрика.
        - Вдома знову є світло.
        - Вдома увімкнули світло.
        - Вдома увімкнули електрику.
        messages:
        - Вимкнення світла за планом о {{ next_outage }}.
        - Наступне вимкнення о {{ next_outage }}.
        - Відключення о {{ next_outage }}.
        - О {{ next_outage }} наступне відключення.
      action: script.announcement
  mode: single
- id: '1723848039024'
  alias: 'Curtains: Open Curtains in the morning'
  description: Slowly open Bedroom Curtains. Open all curtains when we get up.
  triggers:
  - at: 08:30:00
    enabled: true
    trigger: time
  conditions:
  - condition: state
    entity_id: binary_sensor.someone_is_home
    state: 'on'
  actions:
  - action: script.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: script.slowly_close_curtains
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - if:
    - condition: state
      entity_id: script.slowly_close_curtains
      state: 'on'
    then:
    - action: script.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: script.slowly_close_curtains
    alias: Stop opening curtains, if they are still opening
  - delay:
      hours: 0
      minutes: 30
      seconds: 0
      milliseconds: 0
  - alias: Wait for everyone to wake up
    wait_for_trigger:
    - entity_id:
      - binary_sensor.do_not_disturb_family
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 0
      trigger: state
    timeout:
      hours: 4
      minutes: 0
      seconds: 0
      milliseconds: 0
  - alias: Wait to leave Bedroom
    wait_for_trigger:
    - entity_id:
      - binary_sensor.living_room_presence_sensor_sofa
      - binary_sensor.living_room_presence_sensor_table
      to: 'on'
      trigger: state
      for:
        hours: 0
        minutes: 10
        seconds: 0
    - entity_id:
      - binary_sensor.bedroom_motion_occupancy
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 10
        seconds: 0
      trigger: state
    timeout:
      hours: 3
      minutes: 0
      seconds: 0
      milliseconds: 0
  - alias: Open Curtains, if didn't closed them manually
    if:
    - condition: not
      conditions:
      - condition: state
        entity_id: cover.bedroom_curtains
        state: closed
      alias: Bedroom Curtains are not closed
    then:
    - action: cover.open_cover
      metadata: {}
      data: {}
      target:
        entity_id:
        - cover.bedroom_curtains
        - cover.living_room_window_curtain
  mode: single
- id: '1724059607884'
  alias: 'Mode: Low Power Mode'
  description: Minimise electricity consumption during the outage, when on reserve
    power supply.
  trigger:
  - platform: state
    entity_id: binary_sensor.electricity
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.electricity
    from: 'on'
    to: 'off'
  - platform: homeassistant
    event: start
  condition: []
  action:
  - action: script.low_power_mode
    metadata: {}
    data: {}
  mode: restart
- id: '1724060454567'
  alias: 'Alert: No Electricity Soon'
  description: Notify 30 minutes in advance before the electricity turns off
  trigger:
  - platform: template
    value_template: '{{ now() >= states(''sensor.yasno_grupa_4_next_outage'') | as_datetime
      - timedelta(minutes=30) }}'
    alias: 30 minutes before outage
  condition:
  - condition: state
    entity_id: binary_sensor.electricity_outages_applied
    state: 'on'
  action:
  - metadata: {}
    data:
      speak: true
      notify: true
      notify_data:
        url: /localave/reserve-power
        group: electricity
      messages:
      - Планове відключення світла за 30 хвилин.
      - За 30 хвилин відключення світла.
      - Через півгодини вимкнуть світло.
      - Відключення світла за півгодини.
      title: Електрика ⚡️
      service: notify.all
      speaker: media_player.living_room_homepod
    action: script.announcement
  mode: single
- id: '1724060590677'
  alias: 'Alert: Electricity will turn on soon'
  description: Notify 1 hours in advance before the electricity turns on
  trigger:
  - alias: 60 minutes before connectivity
    platform: template
    value_template: '{{ now() >= states(''sensor.yasno_grupa_4_next_connectivity'')
      | as_datetime - timedelta(minutes=60) }}'
  condition:
  - condition: state
    entity_id: binary_sensor.electricity
    state: 'off'
  action:
  - metadata: {}
    data:
      speak: true
      notify: true
      notify_data:
        url: /localave/reserve-power
        group: electricity
      messages:
      - Світло гарантовано увімкнуть за годину.
      - Одна година до увімкнення світла за графіком.
      - За графіком через годину увімкнуть світло.
      - Планове увімкнення світла за годину.
      title: Електрика ⚡️
      service: notify.all
      speaker: media_player.living_room_homepod
    action: script.announcement
  mode: single
- id: '1724063626997'
  alias: 'Climate: Turn on heaters during heating season'
  description: Turn on/off heaters when weather is getting cold/warm
  trigger:
  - platform: state
    entity_id:
    - weather.forecast_fayna_town
  condition:
  - condition: numeric_state
    entity_id: weather.forecast_fayna_town
    attribute: temperature
    below: 10
  action:
  - action: weather.get_forecasts
    metadata: {}
    data:
      type: daily
    target:
      entity_id: weather.forecast_fayna_town
    response_variable: daily_forecast
  - variables:
      heating_season: '{% set days = 3 %} {% set threshold = 30 %} {{ daily_forecast[''weather.forecast_fayna_town''].forecast[:days]
        | selectattr(''templow'', ''le'', threshold) | list | count }}'
  - if:
    - condition: template
      value_template: '{{ heating_season }}'
      alias: Heating season began
    - condition: state
      entity_id:
      - climate.living_room_heater
      - climate.bedroom_heater
      - climate.cabinet_left_heater
      - climate.cabinet_right_heater
      state: 'off'
    then:
    - action: climate.set_hvac_mode
      metadata: {}
      data:
        hvac_mode: auto
      target:
        entity_id:
        - climate.living_room_heater
        - climate.bedroom_heater
        - climate.cabinet_left_heater
        - climate.cabinet_right_heater
    - action: script.announcement
      metadata: {}
      data:
        speak: false
        notify: true
        notify_data:
          url: lovelace/home
        title: Опалення ♨️
        messages:
        - Вмикаємо обігрівачі.
        - Переводимо обігрівачі у режим обігріву.
        - Відкриваємо батареї.
        openings:
        - Прогнозується похолодання.
        - Температура опускається.
        - Найближчими днями буде холодно.
    else:
    - action: climate.set_hvac_mode
      metadata: {}
      data:
        hvac_mode: 'off'
      target:
        entity_id:
        - climate.living_room_heater
        - climate.bedroom_heater
        - climate.cabinet_left_heater
        - climate.cabinet_right_heater
    - action: script.announcement
      metadata: {}
      data:
        speak: false
        notify: true
        notify_data:
          url: lovelace/home
        title: Опалення ♨️
        messages:
        - Вимикаємо обігрівачі.
        - Закриваємо батареї.
        openings:
        - Прогнозується потепління.
        - Температура піднімається.
        - Найближчими днями буде тепло.
  - delay:
      hours: 12
      minutes: 0
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1724064426060'
  alias: 'Climate: Suggest turning on AC when it''s hot'
  description: When temperature raises over certain level, send an actionable notification
    for turning on ACs
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.home_temperature
    above: 30
  condition:
  - condition: state
    entity_id: binary_sensor.someone_is_home
    state: 'on'
  - condition: state
    entity_id:
    - climate.cabinet_ac
    - climate.living_room_ac
    state: 'off'
  action:
  - variables:
      turn_on_both: '{{ ''TURN_ON_BOTH'' ~ context.id }}'
      turn_on_living_room: '{{ ''TURN_ON_LIVING_ROOM'' ~ context.id }}'
      turn_on_cabinet: '{{ ''TURN_ON_HOME_CABINET'' ~ context.id }}'
    alias: Define action for notification
  - alias: Suggest turning on AC
    data:
      title: "Кондиціонер \U0001F975"
      speak: false
      openings:
      - Вдома занадто жарко.
      - Температура вдома зростає.
      - Вдома жарко.
      messages:
      - Увімкнути кондиціонери?
      - Охолодити дім?
      - Включити кондиціонери?
      - Натисніть, щоб включити кондиціонери.
      notify_data:
        tag: ac
        actions:
        - action: '{{ turn_on_both }}'
          title: Увімкнути обидва
          activationMode: background
          authenticationRequired: true
        - action: '{{ turn_on_living_room }}'
          title: Увімкнути у вітальні
          activationMode: background
          authenticationRequired: true
        - action: '{{ turn_on_cabinet }}'
          title: Увімкнути у кабінеті
          activationMode: background
          authenticationRequired: true
        url: /lovelace/living_room
    action: script.announcement
  - alias: Wait for click on action
    wait_for_trigger:
    - id: both
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ turn_on_both }}'
      alias: Turn on both AC
    - id: living_room
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ turn_on_living_room }}'
      alias: Turn on Living Room AC
    - id: cabinet
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ turn_on_cabinet }}'
      alias: Turn on Cabinet AC
    timeout:
      hours: 3
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: true
  - choose:
    - conditions:
      - alias: Turn on Both ACs
        condition: template
        value_template: '{{ wait.trigger.id == ''both'' }}'
      sequence:
      - data:
          hvac_mode: cool
        target:
          entity_id:
          - climate.living_room_ac
          - climate.cabinet_ac
        action: climate.set_hvac_mode
    - conditions:
      - alias: Turn on Living Room AC
        condition: template
        value_template: '{{ wait.trigger.id == ''living_room'' }}'
      sequence:
      - data:
          hvac_mode: cool
        target:
          entity_id:
          - climate.living_room_ac
        action: climate.set_hvac_mode
    - conditions:
      - alias: Turn on Cabinet AC
        condition: template
        value_template: '{{ wait.trigger.id == ''cabinet'' }}'
      sequence:
      - data:
          hvac_mode: cool
        target:
          entity_id:
          - climate.cabinet_ac
        action: climate.set_hvac_mode
  - data:
      message: clear_notification
      data:
        tag: ac
    alias: Clear AC notifications
    action: notify.notify
  mode: single
- id: '1724065136245'
  alias: 'Media: Turn off Samsung TV when PlayStation turns off'
  description: Turn off Samsung TV when PS5 goes to sleep mode
  trigger:
  - platform: state
    entity_id:
    - sensor.playstation_5_activity
    to: none
    for:
      seconds: 5
  condition:
  - condition: state
    entity_id: media_player.apple_tv
    state:
    - standby
    - 'off'
  - condition: state
    entity_id: sensor.playstation_5_activity
    state: none
  action:
  - data: {}
    action: media_player.turn_off
    target:
      device_id: ac80d0753177b7ae89f9707e113d3f9d
- id: '1724068550553'
  alias: 'Media: Turn on Apple TV when Samsung TV turns on'
  description: Turn on Apple TV when Samsung TV turns on and PS5 is off
  trigger:
  - platform: state
    entity_id:
    - media_player.samsung_tv
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: state
    entity_id: sensor.playstation_5_activity
    state: none
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - condition: state
    entity_id: media_player.apple_tv
    state: standby
    for:
      hours: 0
      minutes: 1
      seconds: 0
  action:
  - data: {}
    target:
      entity_id: media_player.apple_tv
    action: media_player.turn_on
  mode: single
- id: '1724068930188'
  alias: 'System: Home Assistant Start'
  description: Notify Denys when Home Assistant starts
  trigger:
  - platform: homeassistant
    event: start
  action:
  - action: script.announcement
    metadata: {}
    data:
      speak: false
      notify: true
      title: "Запуск Home Assistant \U0001F3E1"
      messages:
      - Home Assistant повністю запущено!
      - Home Assistant запущено!
      - Home Assistant стартував!
      - Home Assistant готовий до роботи!
      notify_data:
        group: system
        tag: ha-start
      custom_service: notify.denys
- id: '1724069071134'
  alias: 'System: Notify when System disk is full'
  description: Send a notification when system disk is 90% full.
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.system_monitor_disk_usage
    above: 90
    for:
      hours: 1
  condition: []
  action:
  - data:
      title: "Системний пік \U0001F525"
      messages:
      - Системний диск заповнений на {{ trigger.to_state.state }}%.
      - Заповнення системного диску {{ trigger.to_state.state }}%.
      speak: false
      notify_data:
        url: /lovelace/system
        group: system
      openings: {}
    action: script.announcement
  - alias: Don't send notification too often
    delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1724069169148'
  alias: 'System: Notify about high RAM usage'
  description: Notify when RAM usage is high for some time.
  trigger:
  - platform: numeric_state
    entity_id: sensor.system_monitor_memory_usage
    above: 75
    for:
      hours: 0
      minutes: 10
      seconds: 0
    variables:
      openings:
      - Оперативна пам’ять заповнена на {{ trigger.to_state.state }}%.
      - Навантаження на оперативну пам’ять {{ trigger.to_state.state }}%.
      - 'RAM: {{ trigger.to_state.state }}%.'
      messages:
      - Складнощі з виконанням поточного завдання.
      - Аномально велике навантаження на процесор.
  condition: []
  action:
  - data:
      title: "Системний пік \U0001F525"
      messages:
      - Оперативна пам’ять заповнена на {{ trigger.to_state.state }}%.
      - Навантаження на оперативну пам’ять {{ trigger.to_state.state }}%.
      - 'RAM: {{ trigger.to_state.state }}%.'
      speak: false
      notify_data:
        url: /lovelace/system
        group: system
    action: script.announcement
  - delay:
      minutes: 10
    alias: Don't send notification too often
  mode: single
- id: '1724069193706'
  alias: 'System: Notify about high CPU usage'
  description: Send alert when HA has a high CPU usage
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.system_monitor_processor_use
    above: 75
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - data:
      title: "Системний пік \U0001F525"
      speak: false
      notify_data:
        url: /lovelace/system
        group: system
      messages:
      - Процесор навантажений на {{ trigger.to_state.state }}%.
      - Навантаження на процесор {{ trigger.to_state.state }}%.
    action: script.announcement
  - alias: Don't send notification too often
    delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1724069235867'
  alias: 'System: Notify when Media disk is full'
  description: Notify when Media drive is 95% full for some time.
  trigger:
  - platform: numeric_state
    id: media_disk
    entity_id:
    - sensor.system_monitor_disk_usage_media_media
    above: 90
    for:
      hours: 2
      minutes: 0
      seconds: 0
  action:
  - data:
      title: "Диск медіа \U0001F4BF"
      messages:
      - Диск медіа заповнений на {{ trigger.to_state.state }}%.
      - Заповнення диску медіа {{ trigger.to_state.state }}%.
      speak: false
      notify_data:
        url: /lovelace/system
        group: system
      openings: {}
    action: script.announcement
  - delay:
      minutes: 10
    alias: Don't send notification too often
- id: '1724069840727'
  alias: 'System: Run chores in config folder'
  description: Run scripts for generating README, commiting regular updated, etc
  trigger:
  - platform: time_pattern
    hours: /12
  condition: []
  action:
  - metadata: {}
    data: {}
    action: shell_command.chores
  mode: single
- id: '1724070020302'
  alias: 'Vacuum: Notify when finished cleaning'
  description: Notify when vacuum finished cleaning and we are not home.
  trigger:
  - platform: state
    entity_id: vacuum.roborock
    from: cleaning
    to: returning
  condition:
  - condition: state
    entity_id: binary_sensor.someone_is_home
    state: 'off'
  action:
  - data:
      speak: false
      title: "Пилосос \U0001F9F9"
      openings:
      - Прибирання закінчено!
      - Робот прибрав квартиру!
      - Робот все прибрав!
      - Тепер вдома чисто!
      - Робот виконав своє завдання.
      - Робот закінчив з прибиранням.
      messages:
      - Повертаємось на базу!
      - Намагайтесь підтримувати порядок!
      - Пам'ятайте, що чисто не там, де прибирають, а там де не смітять!
      - Подякуйте роботу за прибирання — він старався для вас.
      notify_data:
        group: vacuum
        url: /lovelace/vacuum
    alias: Notify about finished cleaning
    action: script.announcement
- id: '1724070083919'
  alias: 'Vacuum: Notify about errors'
  description: Notify when error with vacuum occured
  trigger:
  - platform: state
    entity_id:
    - sensor.roborock_vacuum_error
    not_to:
    - unavailable
    - unknown
    - none
    not_from:
    - unknown
    - unavailable
    - none
  action:
  - data:
      speak: false
      title: "Пилосос \U0001F9F9"
      openings:
      - Ой! Проблема з роботом!
      - Увага! Проблема з пилососом!
      - Халепа! Робот зіткнувся з помилкою!
      - Виникла непередбачувана ситуація з роботом!
      notify_data:
        group: vacuum
        url: /lovelace/vacuum
      messages:
      - Помилка: '{{ states(''sensor.roborock_vacuum_error'') }}'
    action: script.announcement
- id: '1724070388749'
  alias: 'Climate: Turn on fan when someone is on the toilet'
  description: When someone sits in the toilet, then turn on the fan. Turn off fan
    when person leaves.
  triggers:
  - entity_id:
    - binary_sensor.bathroom_presence_sensor_toilet
    to: 'on'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    trigger: state
  conditions:
  - condition: time
    after: 09:00:00
    before: 02:00:00
  actions:
  - action: fan.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: fan.bathroom_fan
  - wait_for_trigger:
    - entity_id:
      - binary_sensor.bathroom_presence_sensor
      to: 'off'
      for:
        hours: 0
        minutes: 5
        seconds: 0
      trigger: state
    timeout:
      hours: 0
      minutes: 30
      seconds: 0
      milliseconds: 0
  - if:
    - condition: numeric_state
      entity_id: humidifier.bathroom_dehumidifier
      attribute: humidity
      above: sensor.bathroom_conditions_humidity
    then:
    - action: fan.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: fan.bathroom_fan
    alias: Turn off fan when humidity is normal
  mode: single
- id: '1724070592751'
  alias: 'Vacuum: Stop cleaning when we return home'
  description: Send vacuum home when somebody comes home
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.someone_is_home
    from: 'off'
    to: 'on'
  condition:
  - alias: Send vacuum home only when it's cleaning
    condition: state
    entity_id: vacuum.roborock
    state: cleaning
  action:
  - device_id: 2dfb7e90db81c6927aa5e8c11eccc4d5
    domain: vacuum
    entity_id: ae093eb8d79b78192577c245dfde9950
    type: dock
- id: '1724101602010'
  alias: 'Presence: Everyone is Leaving'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.someone_is_home
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.home_occupancy
    state: 'off'
  action:
  - alias: Take a snapshot of the all lights
    action: scene.create
    data:
      snapshot_entities:
      - light.corridor_ceiling_light
      - light.laundry_ceiling_light
      - light.cabinet_ceiling_light
      - light.cabinet_lightstrip
      - light.kitchen_bra
      - light.kitchen_lightstrip
      - light.kitchen_ceiling_light
      - light.living_room_ceiling_light
      - light.living_room_table_light
      - light.balcony_lights
      - light.bedroom_ceiling_light
      - light.bedroom_ligthstrip
      - light.bedroom_left_bedside_bra
      - light.bedroom_right_bedside_bra
      - light.wardrobe_light
      - light.bathroom_bra
      - light.bathroom_ceiling_light
      - light.bathroom_lightstrip
      - light.bedroom_desk_light
      scene_id: lights_snapshot_on_leave
  - action: light.turn_off
    data:
      entity_id: all
    alias: Turn off all the lights
  - action: fan.turn_off
    metadata: {}
    data:
      entity_id: all
    alias: Turn off all the fans
  - action: climate.turn_off
    metadata: {}
    data: {}
    target:
      device_id:
      - c08c565007c2371879435d5e922b4207
      - 7631804b9ad7193027d863cbabedf363
      - 5c2fc4cd5a6fb81a212396671498fb61
      - 40d89bb9201eee3b95e3721622bfe9bb
    alias: Turn off heated floors
  - action: climate.turn_off
    metadata: {}
    data: {}
    target:
      device_id:
      - 895e7f7f7e250e8bdca9cc7cb34f075f
      - e2696d6965e3ef62d342cebe5b8970c6
    alias: Turn off ACs
  - alias: Turn off media players
    action: media_player.turn_off
    metadata: {}
    data: {}
    target:
      device_id:
      - ac80d0753177b7ae89f9707e113d3f9d
      - e1c54fa94cabfaeaafd1a73a8e2f6a6f
      - 6992c3d568dc2d433100ff4a402b3957
      - 990d2be68f28b3d933ab770a87d05f6e
  - if:
    - condition: state
      entity_id: binary_sensor.time_to_clean
      state: 'on'
    - condition: device
      device_id: 2dfb7e90db81c6927aa5e8c11eccc4d5
      domain: vacuum
      entity_id: ae093eb8d79b78192577c245dfde9950
      type: is_docked
    then:
    - data:
        speak: false
        title: "Пилосос \U0001F9F9"
        messages:
        - Пора почати регулярне прибирання.
        - Час прибирати вдома.
        - Бажаєте прибрати вдома?
        - Почати прибирання?
        - Пилосос пропонує домашнє прибирання.
        - Пилосос хоче прибирати квартиру.
        - Пилосос давно не прибирав. Почати?
        notify_data:
          url: /lovelace/vacuum
          group: vacuum
          tag: vacuum-cleaning
          actions:
          - action: VACUUM_START
            title: Почати прибирання
            activationMode: background
            authenticationRequired: true
      action: script.announcement
    alias: Ask start vacuum when appropriate
  mode: restart
- id: '1724250345849'
  alias: 'Vacuum: Clean Counting'
  description: Count cleanings with counter. Needed for maintaining the robot and
    making request to clean home.
  trigger:
  - platform: state
    entity_id: vacuum.roborock
    from: cleaning
    to: returning
  condition: []
  action:
  - action: counter.increment
    data: {}
    target:
      entity_id: counter.vacuum_clean_count
  mode: single
- id: '1724251498951'
  alias: 'Vacuum: iOS Actions'
  description: Handle iOS actions for vacuum cleaner
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_START
    id: start
    alias: '"start" button pressed'
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_START_GENTLE
    id: start_gentle
    alias: '"start_gentle" button pressed'
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_PAUSE
    id: pause
    alias: '"pause" button pressed'
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_RETURN_TO_BASE
    id: return_to_base
    alias: '"return_to_base" button pressed'
  - alias: '"go_to_bin" button pressed'
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_GO_TO_BIN
    id: go_to_bin
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: start
      sequence:
      - action: vacuum.start
        target:
          device_id: 2dfb7e90db81c6927aa5e8c11eccc4d5
        data: {}
    - conditions:
      - condition: trigger
        id: start_gentle
      sequence:
      - action: vacuum.set_fan_speed
        metadata: {}
        data:
          fan_speed: Gentle
        target:
          device_id: 2dfb7e90db81c6927aa5e8c11eccc4d5
      - action: vacuum.start
        metadata: {}
        data: {}
        target:
          device_id: 2dfb7e90db81c6927aa5e8c11eccc4d5
    - conditions:
      - condition: trigger
        id: pause
      sequence:
      - entity_id: vacuum.roborock
        action: vacuum.pause
    - conditions:
      - condition: trigger
        id: return_to_base
      sequence:
      - entity_id: vacuum.roborock
        action: vacuum.return_to_base
    - conditions:
      - condition: trigger
        id:
        - go_to_bin
      sequence:
      - action: script.vacuum_go_to_bin
        data: {}
- id: '1724251564845'
  alias: 'Vacuum: Replacements Alert'
  description: Notify when vacuum parts need to be replaced
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.roborock_main_brush_time_left
    below: 3600
    variables:
      openings:
      - Головна щітка пилососа потребує заміни.
      - Потрібно замінити основну щітку пилососа.
      - Замініть основну щітку пилососа.
      messages:
      - Не забудьте обнулити лічильник після заміни та замовити нову щітку.
      - Обнуліть лічильник після заміни та замовте нову щітку.
  - platform: numeric_state
    id: side_brush
    entity_id:
    - sensor.roborock_side_brush_time_left
    below: 3600
    variables:
      openings:
      - Бокова щітка пилососа потребує заміни.
      - Потрібно замінити бокову щітку пилососа.
      - Замініть бокову щітку пилососа.
      messages:
      - Не забудьте обнулити лічильник після заміни та замовити нову щітку.
      - Обнуліть лічильник після заміни та замовте нову щітку.
  - platform: numeric_state
    id: filter
    entity_id:
    - sensor.roborock_filter_time_left
    below: 3600
    variables:
      openings:
      - Основний фільтр пилососа потребує заміни.
      - Потрібно замінити фільтр пилососа.
      - Замініть фільтр пилососа.
      messages:
      - Не забудьте обнулити лічильник після заміни та замовити новий фільтр.
      - Обнуліть лічильник після заміни та замовте новий фільтр.
  - platform: numeric_state
    id: sensor_dirty
    entity_id:
    - sensor.roborock_sensor_time_left
    below: 60
    variables:
      openings:
      - Сенсори орієнтації пилососа забруднились.
      - Потрібно очистити сенсори пилососа.
      - Очистіть сенсори пилососа.
      messages:
      - Не забудьте обнулити лічильник після очищення.
      - Обнуліть лічильник після очищення.
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state not in [''unknown'', ''unavailable'']
      }}'
    alias: Not from unknown or unavailable
  action:
  - data:
      title: "Пилосос \U0001F9F9"
      openings: '{{ openings }}'
      messages: '{{ messages }}'
      notify_data:
        url: /lovelace/vacuum
        group: vacuum
        actions:
        - identifier: VACUUM_GO_TO_MAINTENANCE
          title: Обслужити
          activationMode: background
          destructive: true
        - identifier: VACUUM_RETURN_TO_BASE
          title: На базу
          activationMode: background
          destructive: true
      speak: false
    alias: Notify about replacements
    action: script.announcement
- id: '1724255258391'
  alias: 'Vacuum: Ask for Maintenance'
  description: Send vacuum near trash bin and ask for maintenance
  trigger:
  - platform: state
    entity_id:
    - vacuum.roborock
    to: returning
    enabled: true
  condition:
  - alias: After every 5th cleaning
    condition: numeric_state
    entity_id: counter.vacuum_clean_count
    above: 5
  - alias: And there was at least one cleaning after previous maintenance
    condition: template
    value_template: '{% set last_maintenance = as_timestamp(state_attr(''automation.vacuum_ask_for_maintenance'',
      ''last_triggered''), 0) %}

      {% set last_cleaning = as_timestamp(states(''sensor.roborock_last_clean_begin''),
      0) %}

      {{ last_cleaning > last_maintenance }}

      '
  action:
  - data:
      title: "Пилосос \U0001F9F9"
      openings:
      - Потрібно обслужити пилосос.
      - Час обслуговування пилососа.
      - Робот трудився для вас, а тепер потребує вашої уваги.
      - Пилосос потребує піклування про себе.
      - Пилосос просить про обслуговування.
      messages:
      - Почистіть ганчірку та наберати свіжої води.
      - Викиньте сміття та наберіть нової води.
      - Викиньте сміття, наберіть води і почистіть ганчірку.
      - Почистіть його та наберіть нової води у бак!
      - Наберіть води та почистіть його!
      notify_data:
        url: /lovelace/vacuum
        group: vacuum
        actions:
        - identifier: VACUUM_PAUSE
          title: Пауза
          activationMode: background
        - identifier: VACUUM_RETURN_TO_BASE
          title: На базу
          activationMode: background
          destructive: true
      speak: false
    alias: Announce vacuum maintenance
    action: script.announcement
  - metadata: {}
    data: {}
    action: vacuum.stop
    target:
      device_id: 2dfb7e90db81c6927aa5e8c11eccc4d5
  - delay:
      seconds: 5
  - action: script.vacuum_go_to_bin
    data: {}
  - metadata: {}
    data: {}
    target:
      entity_id: counter.vacuum_clean_count
    action: counter.reset
- id: '1724256567345'
  alias: 'Vacuum: Ask Regular Cleaning'
  description: Regular vacuum cleaning every two days
  trigger:
  - platform: time_pattern
    hours: /6
    minutes: 0
    seconds: 0
  condition:
  - alias: Robot is docked
    condition: state
    entity_id: vacuum.roborock
    state: docked
  - alias: It's a working day
    condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: input_boolean.do_not_disturb
    state: 'off'
  - alias: Time for cleaning or last cleaning was short
    condition: state
    entity_id: binary_sensor.time_to_clean
    state: 'on'
  - condition: state
    entity_id: input_boolean.away
    state: 'off'
  - condition: time
    after: '12:00:00'
    before: '22:00:00'
  action:
  - data:
      speak: false
      title: "Пилосос \U0001F9F9"
      messages:
      - Пора почати регулярне прибирання.
      - Час прибирати вдома.
      - Бажаєте прибрати вдома?
      - Вдома давно не прибирали. Почати прибирання?
      - Пилосос пропонує домашнє прибирання.
      - Робот хоче прибирати квартиру.
      - Пилосос давно не прибирав. Почати?
      notify_data:
        url: /lovelace/vacuum
        group: vacuum
        tag: vacuum-cleaning
        actions:
        - action: VACUUM_START
          title: Почати прибирання
          activationMode: background
          authenticationRequired: true
        - action: VACUUM_START_GENTLE
          title: Почати тихе прибирання
          activationMode: background
          authenticationRequired: true
    alias: Ask for cleaning
    action: script.announcement
- id: '1724257734960'
  alias: 'Mode: Do Not Disturb on Focus'
  description: Switch Do Not Disturb while camera, mic or focus are on
  trigger:
  - platform: state
    entity_id: binary_sensor.do_not_disturb_family
    for:
      seconds: 15
  condition:
  - condition: state
    entity_id: binary_sensor.someone_is_home
    state: 'on'
  action:
  - entity_id: input_boolean.do_not_disturb
    alias: Toggle Do Not Disturb input boolean
    action: input_boolean.turn_{{ trigger.to_state.state }}
  mode: queued
- id: '1724453773402'
  alias: 'Climate: Calibrate Living Room TRV temperature'
  description: Calibrate TRV temperature with external sensor.
  use_blueprint:
    path: denysdovhan/sync_trv_with_external_sensor.yaml
    input:
      valve: climate.living_room_heater
      ieee_address: '0x8cf681fffeab0589'
      temp_sensor: sensor.living_room_temperature
- id: '1724455604644'
  alias: 'Climate: Calibrate Bedroom TRV temperature'
  description: Calibrate TRV temperature with external sensor.
  use_blueprint:
    path: denysdovhan/sync_trv_with_external_sensor.yaml
    input:
      valve: climate.bedroom_heater
      ieee_address: '0x8cf681fffeb0dbd5'
      temp_sensor: sensor.bedroom_temperature
- id: '1724455708395'
  alias: 'Climate: Calibrate Cabinet Left TRV temperature'
  description: Calibrate TRV temperature with external sensor.
  use_blueprint:
    path: denysdovhan/sync_trv_with_external_sensor.yaml
    input:
      valve: climate.cabinet_left_heater
      ieee_address: '0xbc33acfffe5b97c5'
      temp_sensor: sensor.cabinet_temperature
- id: '1724455781384'
  alias: 'Climate: Calibrate Cabinet Right TRV temperature'
  description: Calibrate TRV temperature with external sensor.
  use_blueprint:
    path: denysdovhan/sync_trv_with_external_sensor.yaml
    input:
      valve: climate.cabinet_right_heater
      ieee_address: '0x804b50fffeefd958'
      temp_sensor: sensor.cabinet_temperature
- id: '1724617767500'
  alias: 'Curtains: Tighten Curtains hooks'
  description: Sometimes hooks on curtains are getting loose. This automation unlock
    and locks hooks on curtain robots
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.someone_is_home
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - alias: Every few days
    condition: template
    value_template: '"{{ (now() - as_datetime(0)).days % 2 == 0 }}"'
  action:
  - action: select.select_option
    metadata: {}
    data:
      option: UNLOCK
    target:
      entity_id:
      - select.bedroom_left_curtain_hooks_lock
      - select.bedroom_right_curtain_hooks_lock
      - select.living_room_window_curtain_hooks_lock
    alias: Unlock all hooks on curtains
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - alias: Lock all hooks on curtains
    action: select.select_option
    metadata: {}
    data:
      option: LOCK
    target:
      entity_id:
      - select.bedroom_left_curtain_hooks_lock
      - select.bedroom_right_curtain_hooks_lock
      - select.living_room_window_curtain_hooks_lock
  mode: single
- id: '1724707031926'
  alias: 'Alert: Notify about EcoFlow discharge level'
  description: Send notification when EcoFlow is draining battery.
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.ecoflow_battery_level
    below: 50
    id: Level Below 50
  - platform: numeric_state
    entity_id:
    - sensor.ecoflow_battery_level
    below: 25
    id: Level Below 25
  - platform: numeric_state
    entity_id:
    - sensor.ecoflow_battery_level
    below: 10
    id: Critical Level
  condition: []
  action:
  - variables:
      remaining_time: '{% set minutes = states(''sensor.ecoflow_discharge_remaining_time'')
        | int %} {% set seconds = minutes * 60 %} {{ seconds | timestamp_custom(''%H:%M'',
        false) }}

        '
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Level Below 50
      sequence:
      - action: script.announcement
        metadata: {}
        data:
          speak: false
          notify: true
          notify_data:
            url: lovelace/reserve-power
          title: "EcoFlow \U0001F50B"
          messages:
          - Залишилось часу {{ remaining_time }}.
          - Час до розряду {{ remaining_time }}.
          - Час до повного розряду {{ remaining_time }}.
          openings:
          - EcoFlow розряджений на половину.
          - EcoFlow розряджений на 50%.
          - Залишилось половина батареї EcoFlow.
    - conditions:
      - condition: trigger
        id:
        - Level Below 25
      sequence:
      - action: script.announcement
        metadata: {}
        data:
          speak: false
          notify: true
          notify_data:
            url: lovelace/reserve-power
          title: "EcoFlow \U0001FAAB"
          messages:
          - Залишилось часу {{ remaining_time }}.
          - Час до розряду {{ remaining_time }}.
          - Час до повного розряду {{ remaining_time }}.
          openings:
          - Залишилось 25% від заряду EcoFlow.
          - Залишилось 25% батареї EcoFlow.
    - conditions:
      - condition: trigger
        id:
        - Critical Level
      sequence:
      - action: script.announcement
        metadata: {}
        data:
          speak: false
          notify: true
          notify_data:
            url: lovelace/reserve-power
          title: "EcoFlow \U0001FAAB"
          messages:
          - Залишилось часу {{ remaining_time }}.
          - Час до розряду {{ remaining_time }}.
          - Час до повного розряду {{ remaining_time }}.
          openings:
          - EcoFlow розряджено. Залишається лише 10%.
          - Залишилось 10% від заряду EcoFlow.
          - Залишилось 10% батареї EcoFlow.
  mode: single
- id: '1725569349589'
  alias: 'Light: Turn on Corridor Light when Door is open'
  description: Turn on Corridor Light when Front Door opens and then turn it off after
    a few minutes
  triggers:
  - entity_id:
    - binary_sensor.front_door_contact
    to: 'on'
    trigger: state
  actions:
  - alias: Turn on Corridor Light
    entity_id: light.corridor_ceiling_light
    action: light.turn_on
  - alias: Wait for some time
    delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
    enabled: true
  - alias: Turn off Corridor Light
    action: light.turn_off
    data: {}
    target:
      entity_id:
      - light.corridor_ceiling_light
    enabled: true
  mode: restart
- id: '1725569528920'
  alias: 'Light: Turn off Corridor Light When Door is Closed'
  description: Turn off Corridor Light when Front Door closes. If the light is still
    on, then send a notification with an action to turn off the light.
  triggers:
  - entity_id:
    - light.corridor_ceiling_light
    to: 'on'
    trigger: state
  actions:
  - wait_for_trigger:
    - entity_id:
      - binary_sensor.front_door_contact
      from: 'on'
      to: 'off'
      trigger: state
    timeout:
      hours: 0
      minutes: 30
      seconds: 0
      milliseconds: 0
  - alias: Turn off Corridor Light immediately, or notify it's still on
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger is not none }}'
        alias: When Front Door was closed
      sequence:
      - delay:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - data: {}
        target:
          entity_id: light.corridor_ceiling_light
        action: light.turn_off
    default:
    - condition: state
      entity_id: light.corridor_ceiling_light
      state: 'on'
    - variables:
        turn_off_corridor_light: '{{ ''TURN_OFF_CORRIDOR_LIGHT'' ~ context.id }}'
      alias: Define action for notification
    - data:
        title: "Світло у коридорі \U0001F4A1"
        speak: false
        openings:
        - Світло у коридорі горить вже 15 хвилин.
        - Світло у коридорі досі горить.
        - Досі горить світло у коридорі.
        messages:
        - Вимкнути?
        - Натисніть і потримайте на сповіщення, щоб вимкнути.
        - Глибоке натискання на сповіщення, щоб вимкнути.
        - Натисніть, щоб вимкнути.
        notify_data:
          actions:
          - action: '{{ turn_off_corridor_light }}'
            title: Вимкнути світло
          url: /lovelace/living_room
      alias: Announce Corridor light is still on
      action: script.announcement
    - wait_for_trigger:
      - event_type: mobile_app_notification_action
        event_data:
          action: '{{ turn_off_corridor_light }}'
        alias: Turn off Corridor Light action
        trigger: event
      timeout:
        hours: 1
      continue_on_timeout: false
    - data: {}
      target:
        entity_id:
        - light.corridor_ceiling_light
      action: light.turn_off
  mode: restart
- id: '1725572095202'
  alias: 'Mode: Away Flow'
  description: Toggle Away mode depending on the Away input boolean
  trigger:
  - platform: state
    entity_id:
    - input_boolean.away
  action:
  - data: {}
    action: script.away_mode
- id: '1725572619161'
  alias: 'Mode: Away on Leaving City'
  description: Toggle Away mode depending on proximity to the Kyiv city
  trigger:
  - alias: Everyone leaves Kyiv
    platform: numeric_state
    entity_id:
    - sensor.home_nearest_distance
    above: 20000
  - alias: Everyone arrives to Kyiv
    platform: numeric_state
    entity_id:
    - sensor.home_nearest_distance
    below: 20000
    variables:
      service: input_boolean.turn_off
    enabled: true
  - platform: state
    entity_id:
    - binary_sensor.someone_in_kyiv
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.someone_in_kyiv
      state: 'off'
    then:
    - action: input_boolean.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.away
    else:
    - action: input_boolean.turn_off
      target:
        entity_id:
        - input_boolean.away
      data: {}
    alias: Toggle Away depending on the location
- id: '1725913248228'
  alias: 'Light: Turn off Bathroom lights'
  description: When no one is in Bathroom, but the lights are still on, then turn
    them off.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroom_presence_sensor
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      area_id: bathroom
  mode: restart
- id: '1726141054126'
  alias: 'System: Turn off fridge when EcoFlow is below 50%'
  description: Turn off fridge when EcoFlow is discharged below 50%, but there still
    no electricity. Save electricity additional ~100Wh.
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.ecoflow_battery_level
    below: 50
  condition:
  - condition: state
    entity_id: binary_sensor.electricity
    state: 'off'
  action:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      device_id: c40eb21b457d3fc821a483d20533441f
  mode: single
- id: '1726147504626'
  alias: 'Presence: Someone is Arriving'
  description: 'Adjust home when someone arrives home:


    * Close curtains when it''s dark

    * Greet people with unique phrase played on speakers'
  triggers:
  - entity_id:
    - binary_sensor.someone_is_home
    from: 'off'
    to: 'on'
    trigger: state
  conditions:
  - condition: state
    entity_id: binary_sensor.home_occupancy
    state: 'off'
  actions:
  - alias: Wait for someone to come
    wait_for_trigger:
    - entity_id:
      - binary_sensor.front_door_contact
      to: 'on'
      trigger: state
    - entity_id:
      - binary_sensor.home_occupancy
      to: 'on'
      trigger: state
    timeout:
      hours: 4
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - alias: Close curtains and turn on lights when it's dark outside
    if:
    - condition: or
      conditions:
      - condition: sun
        after: sunset
      - condition: state
        entity_id: binary_sensor.daylight
        state: 'off'
    then:
    - action: cover.close_cover
      metadata: {}
      data: {}
      target:
        entity_id:
        - cover.bedroom_curtains
        - cover.living_room_window_curtain
    - action: input_boolean.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.evening_lights
  - alias: Turn on speakers
    action: media_player.turn_on
    data: {}
    target:
      device_id:
      - 6992c3d568dc2d433100ff4a402b3957
      - 990d2be68f28b3d933ab770a87d05f6e
  - wait_for_trigger:
    - entity_id:
      - binary_sensor.living_room_presence_sensor
      to: 'on'
      trigger: state
    timeout:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
    alias: Wait for someone to enter Living Room
  - action: script.greeting
    metadata: {}
    data: {}
  mode: restart
- id: '1726148008458'
  alias: 'Light: Presence Simulation in Away Mode'
  description: Toggle Presence Simulation during Night in Away Mode
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
  - platform: sun
    event: sunset
    offset: 0
  condition:
  - condition: state
    entity_id: input_boolean.away
    state: 'on'
  action:
  - choose:
    - conditions:
      - alias: Only when Sun is below the horizon
        condition: state
        entity_id: sun.sun
        state: below_horizon
      sequence:
      - alias: Start Presence Simulation
        data: {}
        action: presence_simulation.start
    default:
    - alias: Stop Presence Simulation
      data: {}
      action: presence_simulation.stop
    alias: Toggle presence simulation
- id: '1726157089320'
  alias: 'Light: Turn on Bathroom Lightstrip'
  description: Turn on Bathroom Lightstrip when someone walk in.
  triggers:
  - entity_id:
    - binary_sensor.bathroom_presence_sensor
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - alias: Turn on Bathroom Lightstrip
    if:
    - condition: numeric_state
      entity_id: sensor.living_room_presence_sensor_light_sensor_light_level
      below: 5
      enabled: true
    - condition: time
      after: 02:00:00
      before: 08:00:00
      enabled: true
    then:
    - action: light.turn_on
      metadata: {}
      data:
        brightness_pct: 1
      target:
        entity_id: light.bathroom_lightstrip
      alias: Turn on dimmed Bathroom Lightstrip
    else:
    - action: light.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: light.bathroom_lightstrip
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - alias: Adjust Bathroom Lightstrip brightness in the morning
    if:
    - condition: time
      after: 09:00:00
      before: '17:00:00'
    - condition: numeric_state
      entity_id: sensor.living_room_presence_sensor_light_sensor_light_level
      above: 5
    - condition: numeric_state
      entity_id: light.bathroom_lightstrip
      attribute: brightness
      below: 5
    then:
    - action: light.turn_on
      metadata: {}
      data:
        brightness_pct: 100
        transition: 2
      target:
        entity_id: light.bathroom_lightstrip
  mode: restart
- id: '1726835581399'
  alias: 'Light: Turn on Bathroom Ceiling Light'
  description: When it's bright in the living room, turn on Bathroom Ceiling Light
    to match brightness in Living Room.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroom_presence_sensor
    to: 'on'
  condition:
  - condition: numeric_state
    entity_id: sensor.living_room_presence_sensor_light_sensor_light_level
    above: 300
  - condition: time
    after: '10:00:00'
  - condition: state
    entity_id: cover.living_room_window_curtain
    state: open
  action:
  - action: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.bathroom_ceiling_light
  mode: single
- id: '1727129720344'
  alias: 'System: Fetch reports from Ukrenergo'
  description: Parse data from [Ukrenergo](https://t.me/s/Ukrenergo) chanel with AI.
    Send notification about electricity outages updates. Update variables for other
    automations.
  trigger:
  - platform: state
    entity_id:
    - sensor.ukrenergo_telegram
    attribute: latest_message
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - action: conversation.process
    metadata: {}
    data:
      agent_id: conversation.ai_ukrenergo_parser
      text: '{{ state_attr(''sensor.ukrenergo_telegram'', ''latest_message'') }}


        {{ states(''sensor.ukrenergo_telegram'') }}

        '
    response_variable: parsing_result
  - variables:
      raw_json: '{{ parsing_result.response.speech.plain.speech }}'
      response: '{{ raw_json | from_json }}'
      date: '{{ response.date }}'
      start_datetime: '{{ response.start_datetime }}'
      end_datetime: '{{ response.end_datetime }}'
      summary: '{{ response.summary }}'
  - action: script.announcement
    metadata: {}
    data:
      speak: false
      notify: true
      notify_data:
        url: /localave/reserve-power
        group: electricity
      title: Електрика ⚡️
      messages:
      - '{{ summary }}'
  - if:
    - condition: template
      value_template: '{{ now().strftime(''%Y-%m-%d'') == date }}'
      alias: The report is related for today
    then:
    - action: input_text.set_value
      data:
        value: '{{ raw_json }}'
      target:
        entity_id: input_text.ukrenergo_response_json
    - action: input_datetime.set_datetime
      metadata: {}
      data:
        datetime: '{{ iif(start_datetime is not none, start_datetime, ''1970-01-01T00:00:00'')
          }}'
      target:
        entity_id: input_datetime.electricity_outages_start
    - action: input_datetime.set_datetime
      metadata: {}
      data:
        datetime: '{{ iif(end_datetime is not none, end_datetime, ''1970-01-01T00:00:00'')
          }}'
      target:
        entity_id: input_datetime.electricity_outages_end
    alias: Update variables only for a new day
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1727199828259'
  alias: 'Mode: Adjust Lights and Curtains in the evening'
  description: When it's getting dark, or sun sets, or indoor illuminance is too low,
    then activate Evening Lights and close curtains
  triggers:
  - event: sunset
    offset: 0
    trigger: sun
  - entity_id:
    - binary_sensor.daylight
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: state
  - entity_id:
    - sensor.indoor_illuminance
    below: 10
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: binary_sensor.someone_is_home
    state: 'on'
  - condition: time
    after: '15:00:00'
    before: '22:00:00'
  - condition: state
    entity_id: light.living_room_lights
    state: 'off'
  actions:
  - action: script.announcement
    metadata: {}
    data:
      speak: true
      notify: false
      messages:
      - Доречно увімкнути світло.
      - Увімкну для вас світло.
      - Краще увімкнути світло.
      - Не будемо псувати очі.
      - Вмикаю для вас світло.
      - Вмикаємо світло.
      - Вмикаю світло.
      - Час увімкнути світло.
      openings:
      - Здається вдома надто темно.
      - Вдома занадто темно.
      - Стемніло.
      - Сонце сховалось.
      - Надто темно.
      - Вдома стало темно.
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.evening_lights
  - action: cover.close_cover
    metadata: {}
    data: {}
    target:
      area_id:
      - living_room
      - bedroom
  mode: single
- id: '1727807795305'
  alias: 'Mode: Evening Lights Activation'
  description: The activation flow for a Evening Lights mode. Enables turns on corresponding
    lights and motion-activated lights.
  triggers:
  - entity_id:
    - input_boolean.evening_lights
    to: 'on'
    from: 'off'
    trigger: state
  conditions: []
  actions:
  - action: script.scene_evening_lights
    metadata: {}
    data: {}
  mode: single
- id: '1727808761281'
  alias: 'Mode: Night Lights Activation'
  description: The activation flow for a Evening Lights mode. Enables turns on corresponding
    lights and motion-activated lights.
  triggers:
  - entity_id:
    - input_boolean.night_lights
    to: 'on'
    from: 'off'
    trigger: state
  conditions: []
  actions:
  - action: script.scene_night_lights
    data: {}
  mode: single
- id: '1727808982967'
  alias: 'Light: Motion-activated lights in Cabinet'
  description: Turn on Lights in Cabinet based on presence and current activated light
    mode.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cabinet_motion_occupancy
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: light.cabinet_lights
    state: 'off'
  action:
  - alias: Turn on corresponding scene
    choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.evening_lights
        state: 'on'
      sequence:
      - action: scene.turn_on
        metadata: {}
        target:
          entity_id: scene.cabinet_evening_lights
    - conditions:
      - condition: state
        entity_id: input_boolean.night_lights
        state: 'on'
      sequence:
      - action: scene.turn_on
        metadata: {}
        target:
          entity_id: scene.cabinet_night_lights
  mode: restart
- id: '1727885771977'
  alias: 'Light: Turn off Cabinet lights'
  description: Turn off lights in Cabinet when motion sensor doesn't detect any motion
    for long period of time.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cabinet_motion_occupancy
    to: 'off'
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition:
  - condition: state
    entity_id: light.cabinet_lights
    state: 'on'
  action:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      area_id: cabinet
  mode: single
- id: '1727892217873'
  alias: 'Light: Motion-activated lights in Bedroom'
  description: Turn on Lights in Bedroom based on presence and current activated light
    mode.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_motion_occupancy
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: light.bedroom_lights
    state: 'off'
  action:
  - alias: Turn on corresponding scene
    choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.evening_lights
        state: 'on'
      sequence:
      - action: scene.turn_on
        metadata: {}
        target:
          entity_id: scene.bedroom_evening_lights
    - conditions:
      - condition: state
        entity_id: input_boolean.night_lights
        state: 'on'
      sequence:
      - action: scene.turn_on
        metadata: {}
        target:
          entity_id: scene.bedroom_night_lights
  mode: restart
- id: '1727892433296'
  alias: 'Light: Turn off Bedroom lights'
  description: Turn off lights in Bedroom when motion sensor doesn't detect any motion
    for long period of time.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_motion_occupancy
    to: 'off'
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition:
  - condition: state
    entity_id: light.bedroom_lights
    state: 'on'
  action:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      area_id: bedroom
  mode: single
- id: '1727894955130'
  alias: 'Light: Suggest activating Night Lights'
  description: At the deep evening, send a notification suggesting to activate Night
    Lights mode.
  triggers:
  - at: '22:00:00'
    trigger: time
  - entity_id:
    - input_boolean.evening_lights
    to: 'on'
    for:
      hours: 6
      minutes: 0
      seconds: 0
    trigger: state
  conditions:
  - condition: state
    entity_id: binary_sensor.someone_is_home
    state: 'on'
  - condition: state
    entity_id: input_boolean.night_lights
    state: 'off'
  actions:
  - variables:
      turn_on_night_lights: '{{ ''TURN_ON_NIGHT_LIGHTS'' ~ context.id }}'
    alias: Define action for notification
  - action: script.announcement
    metadata: {}
    data:
      speak: false
      notify: true
      title: "Нічне світло \U0001F303"
      openings:
      - Вже пізно.
      - Час заспокоїтись.
      - Час відпочинку.
      messages:
      - Натисніть, щоб увімкнути нічне світло.
      - Натисніть, щоб активувати нічне світло.
      - Час увімкнути нічне світло.ʼ
      - Пора перевести дім у режим нічного світла.
      notify_data:
        actions:
        - action: '{{ turn_on_night_lights }}'
          title: Нічне світло
        url: /lovelace/living_room
        tag: night-ligts
  - wait_for_trigger:
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ turn_on_night_lights }}'
      alias: Turn on Night Lights action
      trigger: event
    timeout:
      hours: 5
    continue_on_timeout: false
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.night_lights
  - action: notify.notify
    data:
      message: clear_notification
      data:
        tag: night-lights
    alias: Clear notification
  mode: single
- id: '1727895491320'
  alias: 'WIP: Open Living Room Curtains in the morning.'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.living_room_presence_sensor_sofa
    - binary_sensor.living_room_presence_sensor_table
    to: 'on'
  condition:
  - condition: state
    entity_id: cover.living_room_window_curtain
    state: closed
  - condition: time
    after: '10:00:00'
    before: '14:00:00'
  - condition: state
    entity_id: binary_sensor.do_not_disturb_family
    state: 'off'
  action:
  - action: script.announcement
    metadata: {}
    data:
      speak: false
      notify: true
      notify_data:
        url: lovelace/home
      title: 'Тест: Відкриваємо штори у вітальні'
      messages:
      - Імітуємо, що ми відриваємо штори у вітальні.
      custom_service: notify.denys
  mode: single
- id: '1728768672105'
  alias: 'Curtains: Stop opening Bedroom Curtains when we don''t want to'
  description: Sometimes we want to prevent Bedroom Curtains from opening. Just close
    them when they are opening.
  triggers:
  - trigger: state
    entity_id:
    - cover.bedroom_curtains
    to: closed
  conditions:
  - condition: state
    entity_id: script.slowly_close_curtains
    state: 'on'
  actions:
  - action: script.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: script.slowly_close_curtains
  mode: single
- id: '1728769275919'
  alias: 'Mode: Sleeping Lights Activation'
  description: The activation flow for a Sleeping Lights mode. Enables turns on corresponding
    lights.
  triggers:
  - entity_id:
    - input_boolean.sleeping_lights
    to: 'on'
    from: 'off'
    trigger: state
  conditions: []
  actions:
  - action: script.scene_sleeping_lights
    data: {}
  mode: single
- id: '1728920342998'
  alias: 'Climate: Toggle Bathroom and Laundry fans when we sleep'
  description: Turn off Bathroom and Laundry fans when we sleep and turn them on in
    the morning.
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.sleep_time
  conditions:
  - condition: state
    entity_id: binary_sensor.someone_is_home
    state: 'on'
  actions:
  - if:
    - condition: state
      entity_id: binary_sensor.sleep_time
      state: 'on'
    then:
    - action: homeassistant.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - climate.laundry_cooler
        - humidifier.bathroom_dehumidifier
        - humidifier.laundry_dehumidifier
    else:
    - action: homeassistant.turn_on
      target:
        entity_id:
        - climate.laundry_cooler
        - humidifier.bathroom_dehumidifier
        - humidifier.laundry_dehumidifier
      data: {}
  mode: single
- id: '1729097322604'
  alias: 'Mode: Turn off light modes when all lights turn off'
  description: Turn off all light modes when all lights are off in the night, meaning
    we are set to sleep.
  triggers:
  - trigger: state
    entity_id:
    - light.all_lights
    from: 'on'
    to: 'off'
  - trigger: state
    entity_id:
    - script.scene_light_out
    from: 'off'
    to: 'on'
  conditions:
  - condition: time
    after: 00:00:00
    before: 06:00:00
  - condition: state
    entity_id: binary_sensor.someone_is_home
    state: 'on'
  actions:
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - input_boolean.evening_lights
      - input_boolean.night_lights
      - input_boolean.sleeping_lights
  mode: single
